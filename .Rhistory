# info o obiekcie
head(mtcars)
glimpse(iris)
library(dplyr)
glimpse(iris)
summary(iris)
describe(iris)
# install.packages("animation")
library(datasets)  # Load base packages manually
describe(iris)
str(iris)
library(dplyr)
describe(iris)
library(ggplot2)
describe(iris)
library(pacman)
describe(iris)
library(rio)
library(tidyr)
describe(iris)
library(psych)
describe(iris)
levels(factor(mtcars$cyl))
factor(mtcars$cyl)
dim(mtcars)
length(mtcars)
length(mtcars[,1])
nrow(mtcars)
ncol(mtcars)
plot(iris$Petal.Length, iris$Petal.Width,
col = "#cc0000",  # Hex code for datalab.cc red
pch = 19,         # Use solid circles for points
main = "Iris: Petal Length vs. Petal Width",
xlab = "Petal Length",
ylab = "Petal Width")
plot(iris$Petal.Length, iris$Petal.Width)
barplot(mtcars$cyl)
barplot(table(mtcars$cyl),
col = "#cc5395")
mtcars$cyl
table(mtcars$cyl)
par(mfrow = c(1, 1))
hist(iris$Sepal.Length)
iris$Sepal.Length
hist(mtcars$qsec [mtcars$gear==4],
xlim = c(1,30))
hist(mtcars$qsec)
mtcars$qsec
hist(mtcars$qsec [mtcars$gear==4])
hist(mtcars$qsec [mtcars$gear==4],
xlim = c(1,30))
hist(mtcars$qsec [mtcars$gear==4])
hist(mtcars$wt [mtcars$gear==4],
xlim = c(1,30),
col="blue",
axes = FALSE)
plot(mtcars$wt, mtcars$mpg)
10%%3
l_w=c(1:10)
l_w==5 | l_w==9
l_w[l_w==5]
l_w[l_w==5]
l_w[l_w>5 & l_w<9]
(rep1=rep(c(F, T),each=5))
l_w[rep1]
dfa <- cbind(vNumeric, vCharacter, vLogical)
vNumeric   <- c(1, 2, 3)
vCharacter <- c("a", "b", "c")
vLogical   <- c(T, F, T)
vNumeric[1:2]
dfa <- cbind(vNumeric, vCharacter, vLogical)
dfa  # Matrix of one data type
is.matrix(dfa)
(matrix1 <- matrix(1:10, nrow=5, byrow = T))
dim(matrix1)[1]
rbind(matrix1, c(11:12))
m1 <- cbind(matrix1, 1:5)
(rbind(matrix1, 14:15))
(cbind(matrix1, matrix1))
(c(matrix1, matrix1))
m1[4:5, 2:3]
m1[, 2:3]
m1[4, 2:3]
m1[c(rep(T, 11),F)]
gv <- c("Male", "Female", "Female", "Male", "Male")
class(gv)
(fgv <- factor(gv))
class(fgv)
(as.data.frame(cbind(m1, gv)))
(dv <- c('evening', 'morning', 'afternoon', 'midday', 'midnight', 'evening'))
fdv <- (factor(dv, order = T))
fdv
summary(fdv)
class(mtcars[,1])
mtcars[,1]
mtcars$mpg
library(rio)
library(rio)
# install.packages("animation")
install.packages("rio", dependencies = TRUE)
library(rio)
# install.packages("animation")
install.packages("rio", dependencies = TRUE)
install.packages("rio")
# standaryzacja
speed <- cars$speed
mean(speed)
# install.packages("animation")
library(datasets)  # Load base packages manually
library(dplyr)
library(ggplot2)
library(pacman)
library(rio)
library(tidyr)
library(psych)
# standaryzacja
speed <- cars$speed
mean(speed)
median(speed)
split_data <- function(df, train=T){
split <- (1: round(nrow(df)*.8))
if(train == T){
return(df[split, ])
}
else {
return(df[-split, ])
}
}
norm1 <- split_data(airquality, train=F)
head(norm1)
norm1 <- split_data(airquality, train=T)
head(norm1)
norm1 <- split_data(airquality, train=T)
head(norm1)
as_tibble(movies_lower)
# install.packages("animation")
library(datasets)  # Load base packages manually
library(dplyr)
library(ggplot2)
library(pacman)
library(rio)
library(tidyr)
library(psych)
library(GGally)
# Create mean
colnames(df_titanic) %in% list_na
list_na %in% colnames(df_titanic)
df_titanic[list_na]
identical(df_titanic[list_na], df_titanic[, list_na])
df_titanic[, c(5, 9)]
PATH <- "https://raw.githubusercontent.com/guru99-edu/R-Programming/master/test.csv"
df_titanic <- read.csv(PATH, sep = ",")
head(df_titanic)
df_titanic <- as_tibble(import(PATH))
apply(df_titanic, 2, anyNA)
apply(df_titanic, 2, is.na)
ncol(df_titanic)
head(df_titanic[c(rep(F, 10), T)])
list_na <- colnames(df_titanic)[apply(df_titanic, 2, anyNA)]
df_titanic_drop <- na.omit(df_titanic)
nrow(df_titanic)
nrow(df_titanic_drop)
# Create mean
colnames(df_titanic) %in% list_na
list_na %in% colnames(df_titanic)
df_titanic[list_na]
identical(df_titanic[list_na], df_titanic[, list_na])
df_titanic[, c(5, 9)]
identical(df_titanic[list_na], df_titanic[, c(5, 9)])
right_col <- colnames(df_titanic) %in% colnames(df_titanic)[apply(df_titanic,2,anyNA)]
df_titanic[, 'Age']
df_titanic['Age']
avrage_missing <-
apply(df_titanic[, right_col], 2, mean, na.rm = T)
apply(df_titanic[, right_col], 2, mean, na.rm = F)
df_titanic_replace <-
mutate(
df_titanic,
replace_age = ifelse(is.na(Age), avrage_missing[1], Age),
replace_fare = ifelse(is.na(Fare), avrage_missing[2], Fare)
)
df_titanic_replace
directory <- getwd()
select(mtcars, mpg, disp, gear) %>%
summarise(mean_mpg = mean(mpg), mean_disp = mean(disp))
df <- mtcars %>%
select(mpg, disp, gear) %>%
group_by(gear) %>%
summarize(mean_mpg = mean(mpg), mean_disp = mean(disp))
# Run this code to create the function
open_folder <-function(dir) {
if (.Platform['OS.type'] == "windows") {
shell.exec(dir)
} else {
system(paste(Sys.getenv("R_BROWSER"), dir))
}
}
# Call the function to open the folder
open_folder(directory)
getwd()
# Export Data
setwd("/home/ukasz/Documents/Programowanie/R")
getwd()
directory <- getwd()
# Call the function to open the folder
open_folder(directory)
df
write.xlsx(df, "df.xlsx")
library(xlsx)
library(haven)
write.xlsx(df, "df.xlsx")
View(df_titanic_replace)
View(df)
